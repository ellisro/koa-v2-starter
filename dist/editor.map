{"version":3,"sources":["editor.js"],"names":["window","preact","Component","h","render","Editor","props","state","blocks","reduce","p","c","i","push","BlockMenu","index","App","type","val","insertBlock","setState","prevState","slice","length","Header","message","Main","class","console","log","items","map","item","id","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;qBAEiCA,OAAOC;IAAhCC,2BAAAA;IAAWC,mBAAAA;IAAGC,wBAAAA;;AAEtB;;IACMC;;;;;;;;;;;2BACGC,OAAOC,OAAO;;AAEnB,UAAMC,SAASF,MAAME,MAAN,CAAaC,MAAb,CAAoB,UAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAW;AAC5CF,UAAEG,IAAF,CAAOV,EAAE,UAAF,EAAcQ,CAAd,EAAiB,UAAQC,CAAzB,CAAP;AACAF,UAAEG,IAAF,CAAOV,EAAEW,SAAF,EAAa,EAAEC,OAAOH,CAAT,EAAb,CAAP;AACA,eAAOF,CAAP;AACD,OAJc,EAIb,CAACP,EAAEW,SAAF,EAAa,EAAEC,OAAO,CAAT,EAAb,CAAD,CAJa,CAAf;;AAMA,aACEZ,EAAE,MAAF,EAAU,IAAV,EACEA,EAAE,KAAF,EAAS,IAAT,EAAeK,MAAf,CADF,CADF;AAKD;;;;EAdkBN;;AAiBrB;;;IACMc;;;AACJ,eAAYV,KAAZ,EAAmB;AAAA;;AAAA,2GACXA,KADW;;AAEjB,WAAKC,KAAL,GAAa;AACXC,cAAQ,CAAE,EAAES,MAAM,QAAR,EAAkBC,KAAK,OAAvB,EAAF;AADG,KAAb;AAGA,WAAKC,WAAL,GAAmB,UAACF,IAAD,EAAOC,GAAP,EAAYH,KAAZ,EAAsB;AACvC,aAAKK,QAAL,CAAc,qBAAa;AACzB,eAAO;AACLZ,+CACKa,UAAUb,MAAV,CAAiBc,KAAjB,CAAuB,CAAvB,EAAyBP,KAAzB,CADL,IAEE,EAAEE,UAAF,EAAQC,QAAR,EAFF,sBAGKG,UAAUb,MAAV,CAAiBc,KAAjB,CAAuBP,KAAvB,EAA8BM,UAAUb,MAAV,CAAiBe,MAA/C,CAHL;AADK,SAAP;AAOD,OARD;AASD,KAVD;AALiB;AAgBlB;;;;wCAEmB;AAClB,WAAKH,QAAL,CAAc,EAAd;AACD;;;2BACMd,OAAOC,OAAO;AACnB,aACEJ,EAAE,KAAF,EAAS,IAAT,EACEA,EAAEqB,MAAF,EAAU,EAAEC,SAASlB,MAAMkB,OAAjB,EAAV,CADF,EAEEtB,EAAEuB,IAAF,EAAQnB,KAAR,CAFF,CADF;AAMD;;;;EA7BeL;;AAmClB;;;IACMY;;;;;;;;;;;2BAEGR,OAAO;AACZ,aACEH,EAAE,KAAF,EAAS,EAAEwB,OAAO,YAAT,EAAT,EAAiC,GAAjC,CADF;AAGD;;;;EANqBzB;;AASxB;;;AACA,IAAMsB,SAAS,SAATA,MAAS,CAAClB,KAAD,EAAW;AACxB,SAAOH,EAAE,QAAF,EAAY,IAAZ,EACLA,EAAE,IAAF,EAAQ,IAAR,EAAc,KAAd,CADK,EAELG,MAAMmB,OAAN,IAAiBtB,EAAE,IAAF,EAAQ,IAAR,EAAcG,MAAMmB,OAApB,CAFZ,CAAP;AAID,CALD;;AAQA;;IACMC;;;;;;;;;;;2BACGpB,OAAO;AACZsB,cAAQC,GAAR,CAAYvB,KAAZ;AACA,UAAMwB,QAAQ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAYC,GAAZ,CAAiB,UAACC,IAAD;AAAA,eAC7B7B,EAAE,IAAF,EAAQ,EAAC8B,IAAGD,IAAJ,EAAR,EAAmB,UAAQA,IAA3B,CAD6B;AAAA,OAAjB,CAAd;AAGA,aAAO7B,EAAEE,MAAF,EAAUC,KAAV,EAAiBwB,KAAjB,CAAP;AACD;;;;EAPgB5B;;AAWnBE,OAAOD,EAAEa,GAAF,CAAP,EAAekB,SAASC,cAAT,CAAwB,KAAxB,CAAf","file":"editor.map","sourceRoot":"../public","sourcesContent":["'use strict';\n\nconst { Component, h, render } = window.preact;\n\n/** Instead of JSX, use: h(type, props, ...children) */\nclass Editor extends Component {\n  render(props, state) {\n\n    const blocks = props.blocks.reduce((p,c,i) => {\n      p.push(h('textarea', c, 'Item '+i))\n      p.push(h(BlockMenu, { index: i }))\n      return p;\n    },[h(BlockMenu, { index: 0 })]);\n\n    return (\n      h('main', null,\n        h('div', null, blocks)\n      )\n    );\n  }\n}\n\n/** Example classful component */\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blocks: [ { type: 'markup', val: 'fdadf' }]\n    }\n    this.insertBlock = (type, val, index) => {\n      this.setState(prevState => {\n        return {\n          blocks: [\n            ...prevState.blocks.slice(0,index),\n            { type, val },\n            ...prevState.blocks.slice(index, prevState.blocks.length)\n          ]\n        }\n      })\n    }\n  }\n  \n  componentDidMount() {\n    this.setState({  });\n  }\n  render(props, state) {\n    return (\n      h('div', null,\n        h(Header, { message: state.message }),\n        h(Main, state)\n      )\n    );\n  }\n}\n\n\n\n\n/** Instead of JSX, use: h(type, props, ...children) */\nclass BlockMenu extends Component {\n\n  render(props) {\n    return (\n      h('div', { class: 'block-menu' },'â€¦')\n    );\n  }\n}\n\n/** Components can just be pure functions */\nconst Header = (props) => {\n  return h('header', null,\n    h('h1', null, 'App'),\n    props.message && h('h2', null, props.message)\n  );\n};\n\n\n/** Instead of JSX, use: h(type, props, ...children) */\nclass Main extends Component {\n  render(props) {\n    console.log(props)\n    const items = [1,2,3,4,5].map( (item) => (\n      h('li', {id:item}, 'Item '+item)\n    ));\n    return h(Editor, props, items);\n  }\n}\n\n\nrender(h(App), document.getElementById('app'));"]}